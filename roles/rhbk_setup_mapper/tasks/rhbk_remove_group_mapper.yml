- name: Login to RHBK and get admin token
  ansible.builtin.uri:
    url: "https://{{ rhbk_host }}/realms/master/protocol/openid-connect/token"
    method: POST
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body_format: form-urlencoded
    body:
      grant_type: password
      client_id: admin-cli
      username: "{{ rhbk_admin_user }}"
      password: "{{ rhbk_admin_password }}"
    validate_certs: "{{ rhbk_verify_ssl }}"
    return_content: true
  register: rhbk_auth

- name: Get all LDAP group mappers
  ansible.builtin.uri:
    url: "https://{{ rhbk_host }}/admin/realms/{{ rhbk_realm }}/components?type=org.keycloak.storage.ldap.mappers.LDAPStorageMapper"
    method: GET
    headers:
      Authorization: "Bearer {{ rhbk_auth.json.access_token }}"
    return_content: true
    validate_certs: "{{ rhbk_verify_ssl }}"
  register: ldap_group_mappers

- name: Extract the LDAP group mapper named 'ldap-group-mapper'
  ansible.builtin.set_fact:
    ldap_group_mapper_obj: >-
      {{
        ldap_group_mappers.json
        | selectattr('name', 'equalto', 'ldap-group-mapper')
        | list
        | first | default({})
      }}

- name: Set the ldap_group_mapper_id
  ansible.builtin.set_fact:
    ldap_group_mapper_id: "{{ ldap_group_mapper_obj.id | default('') }}"

- name: Show the extracted group mapper ID
  ansible.builtin.debug:
    msg: "LDAP Group Mapper ID: {{ ldap_group_mapper_id }}"

- name: Delete the LDAP group mapper (if it exists)
  ansible.builtin.uri:
    url: "https://{{ rhbk_host }}/admin/realms/{{ rhbk_realm }}/components/{{ ldap_group_mapper_id }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ rhbk_auth.json.access_token }}"
    status_code: [204, 404]
    validate_certs: "{{ rhbk_verify_ssl }}"
  when: ldap_group_mapper_id != ""
